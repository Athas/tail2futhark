let v0:[int]2 = reshape{[int],[1,2]}([3,2],iotaSh(5)) in
let v1:[int]2 = transp{[int],[2]}(v0) in
let v2:Sh(3) = catSh(dropSh(1,shape{[int],[2]}(v1)),shape{[int],[2]}(v0)) in
let v3:[int]0 = subi(firstSh(shapeSh(shape{[int],[2]}(v0))),1) in
let v4:Sh(3) = iotaSh(firstSh(shapeSh(v2))) in
let v5:Sh(3) = catSh(rotateSh(v3,dropSh(~1,v4)),takeSh(~1,v4)) in
let v6:[int]3 = transp2{[int],[3]}(v5,reshape{[int],[2,3]}(v2,v0)) in
let v7:Sh(3) = catSh(dropSh(~1,shape{[int],[2]}(v0)),shape{[int],[2]}(v1)) in
let v8:Si(2) = firstSh(shapeSh(shape{[int],[2]}(v0))) in
let v9:Sh(3) = iotaSh(firstSh(shapeSh(v7))) in
let v10:Sh(1) = dropSh(negi(v8),rotateSh(v8,iotaSh(firstSh(shapeSh(v9))))) in
let v11:Sh(3) = catSh(dropSh(~1,iotaSh(v8)),snocSh(v10,v8)) in
let v12:[int]3 = transp2{[int],[3]}(v11,reshape{[int],[2,3]}(v7,v1)) in
let v17:[int]2 = reduce{[int],[2]}(addi,0,reshape{[int],[3,3]}([3,3,2],zipWith{[int,int,int],[3]}(muli,v6,v12))) in
let v22:[int]0 = reduce{[int],[0]}(muli,1,reduce{[int],[1]}(addi,0,v17)) in
i2d(v22)
