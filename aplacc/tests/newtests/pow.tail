let v0:[int]2 = reshape{[int],[1,2]}([3,3],[b2iV(tt),2,3,8,b2iV(ff),4,7,6,5]) in
let v1:[int]2 = prArrI(v0) in
let v2:[int]2 = v0 in
let v3:[int]2 = vreverse{[int],[2]}(transp{[int],[2]}(v2)) in
let v4:[int]2 = prArrI(vreverse{[int],[2]}(transp{[int],[2]}(v3))) in
let v7:[int]2 = power(fn v5:[int]2 => let v6:[int]2 = v5 in
          vreverse{[int],[2]}(transp{[int],[2]}(v6)),14,v0) in
let v8:[int]2 = v0 in
let v9:[int]2 = vreverse{[int],[2]}(transp{[int],[2]}(v8)) in
let v12:[bool]2 = zipWith{[int,int,bool],[2]}(eqi,v7,vreverse{[int],[2]}(transp{[int],[2]}(v9))) in
let v15:[bool]0 = prSclB(reduce{[bool],[0]}(andb,tt,rav(v12))) in
let v26:[int]1 = prArrI(power(fn v22:[int]1 => let v23:[int]1 = v22 in
                 snoc{[int],[0]}(rav(v23),reduce{[int],[0]}(addi,0,takeV{[int],[2]}(~2,rav(v23)))),10,eachV{[bool,int],[2]}(b2i,[ff,tt]))) in
i2d(b2iV(ff))
